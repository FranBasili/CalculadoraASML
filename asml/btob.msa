	p68h11
	public	btasci,zcleaner
$const.def
****************************************************************************************************************
* 		Binary to ASCII
* Transforma un numero en bcd a binario
* Parametros recibidos:  
*    Inicio del arreglo de numeros por IX  
*    Inicio de mdis por IY
* Parametros entregados: Numero en ASCII en la memoria pedida por IY
****************************************************************************************************************
	rseg	CODE
btasci	equ	*
 	psha
	pshb
	pshx
	pshy		;programación defensiva
	
	ldd	0,x
	beq	cero
	lsla
	bcc	posit	;en estas cuatro primeras lineas verifico si el númmero es negativo o cero
	ldab	#$2D	;cargo el sibolo negativo -
	stab	0,y
	ldd	0,x	;cargo el numero a convertir
	coma	
	comb
	addd	#1	;complemento a dos de AccD
	ldx	#DIGITOS-1	;cantidad de numeros a convertir (como es negativo es uno menos)
	pshx
	bra 	cargo
posit	ldd	0,x
	ldx	#DIGITOS	;cantidad de numeros a convertir
	pshx		;uso una variable temporal que estará en el stack
cargo	ldx	#10	
	idiv
	cpx	#0
	addb	#$30	;corrección de número decimal a ASCII		
	stab	3,y	;lo cargo en mdis para luego ser mostrado en el display
nonum	dey		;recorro los elementos del display
	xgdx		;intercambio para no perder lo que se seguira dividiendo
	pulx	
	dex		;decremento el contador de divisiones (variable temporal)
	pshx
	bne	cargo	;si el contador es cero es porque cargo todos los elementos del display
	pulx		;corrección de SP
	jmp	fin


cero	std	0,y	;en las últimos tres elementos (de izquierda a derecha)no se ve nada y solo aparece 
	ldd	#$0030	; un cero en la el primer elemento del display.
	std	2,y	
	
fin	puly		;programación defensiva
	pulx
	pula	
	pulb
	rts
*************************************************************************************************************
*************************************************************************************************************

****************************************************************************************************************
* ZCLEANER
* Borra todos los ceros no significativos del display
* Parametros recibidos:  
*    Memorias correspondientes al display por IX.
* Parametros entregados: Ninguno
*************************************************************************************************************

	rseg	CODE
zcleaner	equ	*
	psha
	pshb
	pshx
	
	ldab	#DIGITOS	; Cargo un contador con la cant de digitos a analizar
cleaning	ldaa	0,x	; Cargo un dígito
	cmpa	#$2D		; Si es el signo negativo, no lo borro pero no lo 
	beq	noclean		;cuento como un digito significativo
	tsta			; Si el caracter es distinto de cero: salgo de la subrutina
	cmpa	#$30		; Si el caracter es 0, lo borro.
	bne	fclean	
	clr	0,x
noclean	inx			; Apunto al sgte caracter
	decb			; Decremento el contador de caracteres a analizar
	bne	cleaning	; Sigo analizando mientras queden caracteres.
	
fclean	pulx
	pulb
	pula
	rts
*************************************************************************************************************
*************************************************************************************************************
	END