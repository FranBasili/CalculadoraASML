################################################################################
#                                                                              #
#    Micro Series 6801 Assembler V2.00/DOS              06/Nov/19  16:46:45    #
#                                                                              #
#       Source   =   calculo.msa                                               #
#       List     =   calculo.lst                                               #
#       Object   =   calculo.r07                                               #
#       Options  =                                                             #
#                                                                              #
#                                               (c) Copyright IAR Systems 1990 #
################################################################################


    1  0000                   p68h11
    2  0000                   public  calculo
    3                 $const.def
    4                 *********************** Ports ****************************
    5  1007           DDRC    equ     $1007 ;data direction register for C
    6  1002           PIOC    equ     $1002 ;for strobe B assertion change
    7  1005           PORTCL  equ     $1005 ;port C latched
    8  1004           PORTB   equ     $1004 ;port B
    9  1003           PORTC   equ     $1003 ;rows
   10                 
   11                 *************** Cols and Row Ports ***********************
   12  1003           ROWS    equ     PORTC ;outputs
   13  1005           COLS    equ     PORTCL ;inputs
   14                 
   15                 ******************* Row Masks ****************************
   16  000E           FIL0    equ     00001110b ;mascaras para manejo de filas
   17  000D           FIL1    equ     00001101b
   18  000B           FIL2    equ     00001011b
   19  0007           FIL3    equ     00000111b
   20                 **********************************************************
   21                 *************Caracteristicas de Hardware******************
   22  0004           DIGITOS equ     4
   23  270F           MAX     equ     9999
   24  FC19           MIN     equ     -999
   25                 **********************************************************
   26                 ****************************************************************************************************************
   27                 * CALCULO
   28                 *       Si se pulso F ('=') en el teclado llama a esta subrutina que se encarga de ver cuales son los operandos 
   29                 *       y la operación y realizarla.
   30                 * Parametros recibidos: 
   31                 *       Dirección del primer operando por IX 
   32                 *       Inicio de result por IY
   33                 * Parametros entregados: Resultado de la opeación en la variable en la memoria definida como result
   34                 ****************************************************************************************************************
   35  0000                   rseg    CODE
   36  0000           calculo equ     *
   37  0000 36                psha
   38  0001 37                pshb
   39  0002 3C                pshx
   40  0003 183C              pshy            ;programación defensiva
   41                         
   42  0005 862A              ldaa    #$2A    ;comparo con el caracter de multiplicación en ASCII
   43  0007 A102              cmpa    2,x
   44  0009 274C              beq     mula
   45  000B 4C                inca            ;comparo con los caracteres de suma en ASCII
   46  000C A102              cmpa    2,X     
   47  000E 2730              beq     suma
   48  0010 4C                inca            ;comparo con los caracteres de resta en ASCII
   49  0011 4C                inca
   50  0012 A102              cmpa    2,X     
   51  0014 2713              beq     resta   ;si no es ninguno de los anteriores tiene que dividir 
   52                 ****************************************************************************************************************        
   53  0016           diva    equ     *
   54  0016 EC00              ldd     0,x
   55  0018 EE04              ldx     4,x     ;4,x es el segundo operando en variables
   56  001A 2603              bne     divido  ;si el divisor es 0 que resulte en un error
   57  001C 7E0076            jmp     errcal
   58                         
   59  001F BD00D4    divido  jsr     Division
   60  0022 18ED00            std     0,y
   61  0025 0C                clc
   62  0026 7E0077            jmp     fin
   63                         
   64                 ****************************************************************************************************************        
   65  0029           resta   equ     *
   66  0029 EC00              ldd     0,x
   67  002B A304              subd    4,x     ;4,x es el segundo operando en variables
   68  002D 1A83FC19          cpd     #MIN    ;comparo con el máximo valor de 3 digitos
   69  0031 2D43              blt     errcal
   70  0033 1A83270F          cpd     #MAX    ;comparo con el máximo valor de 4 digitos
   71  0037 2E3D              bgt     errcal
   72  0039 18ED00            std     0,y
   73  003C 0C                clc             ;indico que la cuenta esta bien
   74  003D 7E0077            jmp     fin
   75                 
   76                 ****************************************************************************************************************
   77  0040           suma    equ     *
   78  0040 EC00              ldd     0,x
   79  0042 E304              addd    4,x     ;4,x es el segundo operando en variables
   80  0044 1A83270F          cpd     #MAX    ;comparo con el máximo valor de 4 digitos
   81  0048 2E2C              bgt     errcal
   82  004A 1A83FC19          cpd     #MIN    ;comparo con el máximo valor de 3 digitos
   83  004E 2D26              blt     errcal
   84  0050 18ED00            std     0,y
   85  0053 0C                clc             ;indico que la cuenta esta bien
   86  0054 7E0077            jmp     fin
   87                         
   88                 ****************************************************************************************************************        
   89  0057           mula    equ     *
   90  0057 3C                pshx            ; Paso por stack la dirección del primer factor
   91  0058 EC00              ldd     0,x     ; Cargo en AccD el primer factor
   92  005A 2710              beq     zporz   ; Si alguno de los factores es 0, voy a zporz
   93                         
   94  005C EE04              ldx     4,x     ; Cargo en IX el segundo factor
   95  005E 270C              beq     zporz   ; Si alguno de los factores es 0, voy a zporz
   96                         
   97  0060 BD007D            jsr     multi
   98  0063 38                pulx
   99  0064 2511              bcs     fin     ; Si no hay error, no guardo el resultado.
  100  0066 18ED00            std     0,y     ;Guardo el resultado donde me indicaron
  101  0069 7E0077            jmp     fin
  102                 
  103  006C 186F00    zporz   clr     0,y     ; Si alguno de los factores es 0,
  104  006F 186F01            clr     1,y     ;hago que el resultado sea 0 sin necesidad
  105  0072 38                pulx            ;de saltar a la sbr de multiplicación
  106  0073 7E0077            jmp     fin
  107                         
  108  0076 0D        errcal  sec             ;indico por el carry (=1) que hay un error en la cuenta
  109  0077 1838      fin     puly            ;programación defensiva
  110  0079 38                pulx
  111  007A 32                pula    
  112  007B 33                pulb
  113  007C 39                rts
  114                 **********************************************************************************************
  115                 **********************************************************************************************
  116                 
  117                 **********************************************************************************************
  118                 *MULTI
  119                 * Teniendo ambos factores en registros y y recibiendo la dirección del primer factor, calcula
  120                 *la multiplicación entre ambos operandos.
  121                 *  Parametros recibidos: 
  122                 *       Factor 1 por Accd
  123                 *       Factor 2 por IX
  124                 *       Dirección primer factor por stack
  125                 *  Parametros entregados: 
  126                 *       Resultado en AccD
  127                 **********************************************************************************************
  128  007D           multi   equ     *
  129  007D 183C              pshy
  130                         
  131  007F 7F0000            clr     mulneg  ; Limpio la variable que guarda la cant de factores negativos
  132  0082 1830              tsy     
  133  0084 18EE04            ldy     4,y     ; Cargo IY como un contador con las veces a sumar el primer factor
  134                         
  135  0087 4D                tsta            ; Actualizamos el CCR en funcion del primer factor
  136  0088 2C0B              bge     mulpos1 ; Solo si no es negativo, saltamos directo al analisis del divisor
  137  008A 7C0000            inc     mulneg  ; Incremento el contador de numeros negativos
  138  008D 43                coma            ; Comienzo realizando un complemento a 2 de forma semimanual, para ello:
  139  008E 53                comb            ;complemento a 1 Acca y Accb por separado  
  140  008F C30001            addd    #1      ; Sumo uno a AccD
  141  0092 18ED00            std     0,y     ; Guardo el primer factor como positivo
  142                         
  143  0095 8F        mulpos1 xgdx            ; Analizamos el segundo factor
  144  0096 4D                tsta            ; Actualizamos el CCR en funcion del primer factor
  145  0097 2C08              bge     mulpos2 ; Solo si no es negativo, saltamos directo a la multiplicación
  146  0099 7C0000            inc     mulneg  ; Incremento el contador de numeros negativos
  147  009C 43                coma            ; Comienzo realizando un complemento a 2 de forma semimanual, para ello:
  148  009D 53                comb            ;complemento a 1 Acca y Accb por separado  
  149  009E C30001            addd    #1      ; Sumo uno a AccD
  150                         
  151                         
  152  00A1 8F        mulpos2 xgdx            ; Devuelvo el segundo factor a IX
  153  00A2 CC0000            ldd     #0
  154  00A5 18E300    multn   addd    0,y     ;la primera vez se carga el número, las demas suma sucesivamente (Producto de números)
  155  00A8 1A83270F          cpd     #MAX    ;comparo con el máximo valor de 4 digitos
  156  00AC 241E              bhs     errcalm ; Si es mayor, salto a error
  157  00AE 09                dex             ;decrementamos el segundo operando para saber cuantas veces sumamos AccD
  158  00AF 26F4              bne     multn   ;si el contador no es cero, sigo multiplicando  
  159                         
  160                         
  161  00B1 7D0000            tst     mulneg  
  162  00B4 271A              beq     finmul  ; Si no había numeros negativos
  163  00B6 740000            lsr     mulneg  ;o ambos eran negativos no complementamos
  164  00B9 740000            lsr     mulneg  ;el cociente obtenido.
  165  00BC 2512              bcs     finmul
  166                         
  167  00BE 43                coma            ; Una vez realizada la multiplicación hago el mismo proceso que hice al 
  168  00BF 53                comb            ;principio pero ahora para obtener resultado de forma signada.
  169  00C0 C30001            addd    #1      ; Sumo uno a AccD
  170  00C3 1A83FC19          cpd     #MIN    ; Comparo con el valor mínimo
  171  00C7 2F03              ble     errcalm ; Si el resultado es menor al mínimo, voy a error 
  172  00C9 7E00D0            jmp     finmul
  173                         
  174                 
  175  00CC 0D        errcalm sec             ; Aviso que hay error
  176  00CD 7E00D1            jmp     failmul
  177                 
  178  00D0 0C        finmul  clc             ; Aviso el exito de la multiplicación
  179  00D1 1838      failmul puly
  180  00D3 39                rts             ; Retorno a la subrutina sin haber modificado ningún registro no deseado
  181                         
  182                 **********************************************************************************************
  183                 **********************************************************************************************  
  184                 
  185                 
  186                 **********************************************************************************************
  187                 *DIVISION
  188                 *Esta función recibe por AccD el numero signado a dividir y lo divide por el 
  189                 *numero que se encuentre en IX. El cociente se entrega en AccD 
  190                 *Parametros recibidos: 
  191                 *       Dividendo por AccD
  192                 *       Divisor por IX.
  193                 *Parametros entregados: cociente en AccD, resto por IX.
  194                 **********************************************************************************************
  195  00D4           Division        equ     *
  196  00D4 183C              pshy
  197                         
  198  00D6 18CE0000          ldy     #0      ; Borramos IY para usarlo como contador
  199  00DA 4D                tsta            ; Actualizamos el CCR en funcion del dividendo
  200  00DB 2C07              bge     nocom1  ; Solo si no es negativo, saltamos directo al analisis del divisor
  201  00DD 1808              iny             ; Incremento el contador de numeros negativos
  202  00DF 43                coma            ; Comienzo realizando un complemento a 2 de forma semimanual, para ello:
  203  00E0 53                comb            ;complemento a 1 Acca y Accb por separado  
  204  00E1 C30001            addd    #1      ; Sumo uno a AccD
  205                         
  206  00E4 8F        nocom1  xgdx            ; Analizamos el divisor
  207  00E5 4D                tsta
  208  00E6 2C07              bge     nocom2  ; Solo si no es negativo, saltamos directo a la división
  209  00E8 1808              iny             ; Incremento el contador de numeros negativos
  210  00EA 43                coma            ; Comienzo realizando un complemento a 2 de forma semimanual, para ello:
  211  00EB 53                comb            ;complemento a 1 Acca y Accb por separado  
  212  00EC C30001            addd    #1      ; Sumo uno a AccD
  213                         
  214                         
  215  00EF 8F        nocom2  xgdx            ; Devuelvo de divisor a IX
  216  00F0 02                idiv            ; Divido el resultado de la suma por la cant de elementos que sume.
  217  00F1 8F                xgdx            ; Transfiero el cociente de IX a Accd.
  218                         
  219  00F2 188F              xgdy
  220  00F4 5D                tstb
  221  00F5 270E              beq     nocomd  ; Si no había numeros negativos
  222  00F7 54                lsrb            ;o ambos eran negativos no complementamos
  223  00F8 54                lsrb            ;el cociente obtenido.
  224  00F9 250A              bcs     nocomd
  225                         
  226  00FB 188F              xgdy
  227  00FD 43                coma            ; Una vez realizada la división hago el mismo proceso que hice al 
  228  00FE 53                comb            ;principio pero ahora para obtener resultado de forma signada.
  229  00FF C30001            addd    #1      ; Sumo uno a AccD
  230  0102 7E0107            jmp     find
  231                 
  232  0105 188F      nocomd  xgdy
  233  0107 1838      find    puly
  234  0109 39                rts             ; Retorno a la subrutina sin haber modificado ningún registro no deseado
  235                         
  236                 **********************************************************************************************
  237                 **********************************************************************************************  
  238  0000                   rseg    VARS
  239  0000           mulneg  rmb     1
  240  0001                   END

    Errors:  None         ###########
    Bytes:   266          # calculo #
    CRC:     20A6         ###########

