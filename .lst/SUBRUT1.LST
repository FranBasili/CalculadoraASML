################################################################################
#                                                                              #
#    Micro Series 6801 Assembler V2.00/DOS              06/Nov/19  16:46:57    #
#                                                                              #
#       Source   =   subrut1.msa                                               #
#       List     =   subrut1.lst                                               #
#       Object   =   subrut1.r07                                               #
#       Options  =                                                             #
#                                                                              #
#                                               (c) Copyright IAR Systems 1990 #
################################################################################


    1  0000                   p68h11
    2  0000                   public  initdis,outchar,init,display,error
    3  0000                   extern  keypad,delay
    4                 $const.def
    5                 *********************** Ports ****************************
    6  1007           DDRC    equ     $1007 ;data direction register for C
    7  1002           PIOC    equ     $1002 ;for strobe B assertion change
    8  1005           PORTCL  equ     $1005 ;port C latched
    9  1004           PORTB   equ     $1004 ;port B
   10  1003           PORTC   equ     $1003 ;rows
   11                 
   12                 *************** Cols and Row Ports ***********************
   13  1003           ROWS    equ     PORTC ;outputs
   14  1005           COLS    equ     PORTCL ;inputs
   15                 
   16                 ******************* Row Masks ****************************
   17  000E           FIL0    equ     00001110b ;mascaras para manejo de filas
   18  000D           FIL1    equ     00001101b
   19  000B           FIL2    equ     00001011b
   20  0007           FIL3    equ     00000111b
   21                 **********************************************************
   22                 *************Caracteristicas de Hardware******************
   23  0004           DIGITOS equ     4
   24  270F           MAX     equ     9999
   25  FC19           MIN     equ     -999
   26                 **********************************************************
   27  0000                   rseg    CODE
   28                 **************************************
   29                 *Initdis: Inicializar el display
   30                 **************************************
   31  0000           initdis equ *
   32  0000 36                psha
   33  0001 860F              ldaa    #$0F    ;set for output
   34  0003 B71007            staa    DDRC    ;C output
   35  0006 B61002            ldaa    PIOC    ;get current value
   36  0009 84FE              anda    #$FE    ;reset bit 0 to 0
   37  000B B71002            staa    PIOC    ;send it out
   38  000E 32                pula
   39  000F 39                rts
   40                 
   41                 **************************************
   42                 *Outchar: 
   43                 * ACCA: Carácter a enviar
   44                 * ACCB: Posición (0-3)
   45                 **************************************
   46  0010           outchar equ *
   47  0010 F71005            stab    PORTCL  ;set the position
   48  0013 B71004            staa    PORTB   ;set the character
   49  0016 39                rts
   50                         
   51                 ********************************************************************************
   52                 *INIT: 
   53                 * Borra N cantidad de memorias desde la dirección pedida
   54                 *       Parametros recibidos:
   55                 *  Dirección de origen por IX
   56                 *  Cant de memorias a borrar por AccA
   57                 *       Parametros entregados: Ninguno
   58                 ********************************************************************************
   59  0017           init    equ *
   60  0017 3C                pshx
   61  0018 36                psha            ;programación defensiva
   62                         
   63  0019 6F00      borra   clr     0,x     ; Borro una memoria
   64  001B 08                inx             ; Apunto IX a la sgte memoria
   65  001C 4A                deca            ; Decremento el contador
   66  001D 26FA              bne     borra   ; Sigo borrando hasta que se borren todas las memorias
   67                         
   68  001F 32                pula            ;programación defensiva
   69  0020 38                pulx
   70  0021 39                rts
   71                         
   72                 *********************************************************************************
   73                 *DISPLAY
   74                 *  Carga el contenido de las posiciones de memoria mdis0, mdis1, mdis2, mdis3
   75                 * y muesta su contenido en el display en la posicion 0, 1, 2, 3, respectivamente
   76                 *       Parametros recibidos: 
   77                 *  Inicio de string con caracteres a mostrar por IX
   78                 *       Parametros entregados: El texto mostrado en el display
   79                 *********************************************************************************
   80                 
   81  0022           display equ     *
   82                 
   83  0022 36                psha
   84  0023 37                pshb            ;programación defensiva
   85                         
   86  0024 5F                clrb            ;limpia b para poder posicionarse en el primer elemento del display
   87  0025 A603              ldaa    3,x     ;carga el cuarto valor de la posición del string para ponerlo en 
   88  0027 BD0010            jsr     outchar  el primer elemento del display
   89  002A 5C                incb
   90  002B A602              ldaa    2,x     ;carga el tercer valor de la posición del string para ponerlo en 
   91  002D BD0010            jsr     outchar  el segundo elemento del display
   92  0030 5C                incb
   93  0031 A601              ldaa    1,x     ;carga el segundo valor de la posición del string para ponerlo en 
   94  0033 BD0010            jsr     outchar  el tercer elemento del display
   95  0036 5C                incb
   96  0037 A600              ldaa    0,x     ;carga el primer valor de la posición del string para ponerlo en
   97  0039 BD0010            jsr     outchar  el cuarto elemento del display
   98                         
   99  003C 33                pulb            ;programación defensiva
  100  003D 32                pula
  101  003E 39                rts
  102                 
  103                 **********************************************************************************************
  104                 *ERROR
  105                 * Pone una "E" en el display y "congela" la calculadora hasta que se aprete clear y se borren
  106                 *todas las memorias.
  107                 *Parametros recibidos:
  108                 *       Primer dirección del arreglo numerico por IX
  109                 *       Origen del arreglo del teclado por IY
  110                 *       Cant memorias a borrar por AccB
  111                 *       Memorias que se muestran en el display por stack
  112                 *Parametros entregados: Ninguno
  113                 **********************************************************************************************
  114  003F           error   equ     *
  115  003F 36                psha            
  116  0040 37                pshb
  117  0041 3C                pshx
  118  0042 183C              pshy            ; Programación defensiva
  119                         
  120  0044 30                tsx             ; Creo un framepointer
  121  0045 EE08              ldx     8,x     ; Cargo en IX la dir de mdis
  122  0047 8645              ldaa    #$45    ; Cargo "E" en la primer memoria del display
  123  0049 A700              staa    0,x     
  124  004B C603              ldab    #3
  125  004D 08                inx
  126  004E 6F00      erase   clr     0,x     ; Borro los tres ultimos digitos del display
  127  0050 08                inx
  128  0051 5A                decb
  129  0052 26FA              bne     erase
  130                         
  131  0054 30                tsx             ; Creo un framepointer
  132  0055 EE08              ldx     8,x     ; Cargo en IX la dir de  mdis
  133  0057 BD0022            jsr     display ; Refresco el display
  134                         
  135  005A 30        waitclr tsx
  136  005B 1AEE00            ldy     0,x     ; Si entre en error, lo mantengo en el bucle
  137  005E BD0000            jsr     keypad  ;hasta que se aprete clear y se borren todas 
  138  0061 18A600            ldaa    0,y     ;las memorias
  139  0064 8143              cmpa    #$43
  140  0066 26F2              bne     waitclr
  141                         
  142  0068 30                tsx             ; Creo un framepointer
  143  0069 A604              ldaa    4,x     ; Cargo en Acca la cant de memorias a borrar
  144  006B EE02              ldx     2,x     ; Cargo la dirección del inicio del arreglo numerico en IX
  145  006D BD0017            jsr     init    ; Borro memorias
  146                         
  147  0070 8630              ldaa    #$30    ; Cargo "0" en Acca
  148  0072 30                tsx             ; Creo un framepointer
  149  0073 EE08              ldx     8,x     ; Cargo en IX la dir. de mdis
  150  0075 A703              staa    3,x     ; Guardo el "0" en el ult digito del display
  151                         
  152  0077 1838              puly            ; Programación defensiva
  153  0079 38                pulx
  154  007A 33                pulb
  155  007B 32                pula
  156  007C 39                rts             ; Retorno a la subrutina sin haber modificado ningún registro no deseado
  157                         
  158                 **********************************************************************************************
  159                 **********************************************************************************************
  160                 
  161  007D                   END

    Errors:  None         ###########
    Bytes:   125          # subrut1 #
    CRC:     EFBF         ###########

