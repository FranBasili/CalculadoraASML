****************************************************************************************************************
*						Calculadora						Grupo: 7
*	Este programa ...
****************************************************************************************************************
	p68h11		;declara el modelo de microprocesador utilizado.
	extern	initdis,outchar,keypad,init,display,cargon,calculo,delay
$const.def
	rseg	CODE
	lds 	#st_ini
	jsr	initdis
	ldx	#negop1
	ldaa	#Nclc	
	jsr	init
	ldaa	#$30
	ldx	#mdis
	staa	3,x
	jsr 	display	
mlop	ldy	#I_STR
	jsr	keypad
	
	bcs	apreto
	jmp	nocarga
	
apreto	ldaa	0,y
	cmpa	#$43	; Se apretó Clear?
	bne	noC
	ldx	#negop1
	ldaa	#Nclc	
	jsr	init
	ldaa	#$30
	ldx	#mdis
	staa	3,x
	jsr	display
	jmp	lcarga
	
noC	ldaa	0,y
	cmpa	#$52	; Se apretó "="?
	bne	noR
	ldaa	0,y
	ldab	#2
	jsr	outchar
	jmp	lcarga
	
noR	ldaa	0,y
	cmpa	#10
	bhs	noN	; Se apretó un numero?
	ldx	#digop
	pshx
	ldx	#mdis
	pshx
	ldaa	oper
	bne	cargon2
	ldx	#negop1
	jmp	saltoM1	
cargon2	ldx	#negop2
saltoM1	jsr	cargon
	pulx
	pulx
	jmp	lcarga	

noN 	ldaa	0,y
	cmpa	#$2D	
	bne	noM	; Se apretó "-"?
	ldaa	0,y
	ldab	#1
	jsr	outchar
	jmp	lcarga
	

noM	ldaa	0,y
	beq	nocarga	; Se apretó un operando?
	ldaa	0,y
	staa	oper
	clr	digop
	
lcarga	clc
	ldx	#mdis
	jsr	display
	jsr	delay
nocarga	jmp	mlop 


****************************************************************************************************************
	rseg	VARS
negop1	rmb	1
op1	rmb	2
oper	rmb	1
negop2	rmb	1
op2	rmb	2
mdis	rmb	4
digop	rmb	1
result	rmb	2
Nclc	equ	*-negop1
****************************************************************************************************************	

****************************************************************************************************************
	rseg	STACK
stack	rmb	$50	;el programa hace uso mínimo del stack, pero se asigno un espacio extra.
st_ini	equ	*-1
****************************************************************************************************************

********************  String  ***************************
	rseg	CONST
I_STR	fcb	 0
	fcb	 1
	fcb	 2
	fcb	 3
	fcb	 4
	fcb	 5
	fcb	 6
	fcb	 7
	fcb	 8
	fcb	 9
	fcc	'+-C*/R'
	
	END
