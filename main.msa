****************************************************************************************************************
*						Calculadora						Grupo: 7
*	Este programa ...
****************************************************************************************************************
	p68h11		;declara el modelo de microprocesador utilizado.
	extern	initdis,outchar,keypad,init,display,cargon,calculo,delay,cargoop,btasci
$const.def
	rseg	CODE
	lds 	#st_ini
	jsr	initdis
	ldx	#negop1
	ldaa	#Nclc	
	jsr	init
	ldaa	#$30
	ldx	#mdis
	staa	3,x
	jsr 	display	
mloop	ldy	#I_STR
	jsr	keypad
	
	bcs	apreto
	jmp	nocarga
	
apreto	ldaa	0,y
	cmpa	#$43	; Se apretó Clear?
	bne	noC
	ldx	#negop1
	ldaa	#Nclc	
	jsr	init
	ldaa	#$30
	ldx	#mdis
	staa	3,x
	jsr	display
	jmp	lcarga
	
noC	ldaa	0,y
	cmpa	#$52	; Se apretó "="?
	bne	noR
	ldaa	oper
	bne	sigo
	jmp	nocarga
	
sigo	ldx	#op1
	ldy	#result
	jsr	calculo
	bcc	noerror
	jmp	error
	
noerror	ldx	result	
	stx	op1	; Cargo el resultado en el operando 1
	ldx	#result
	ldy	#mdis
	jsr	btasci
	ldaa	#1
	staa	recur
	jmp	lcarga
	
noR	ldaa	0,y
	cmpa	#10
	bhs	noN	; Se apretó un numero?
	ldx	#digop
	pshx
	ldx	#mdis
	pshx
	ldaa	oper
	bne	cargon2
	ldx	#negop1
	jmp	saltoM1	
cargon2	ldx	#negop2
saltoM1	jsr	cargon
	pulx
	pulx
	jmp	lcarga	


noN 	ldaa	0,y
	cmpa	#$2D	
	bne	noM	; Se apretó "-"?
	
	ldx	op1	; Si todavía no hay operando 1
	beq	nega	; Salto a nega1
	ldaa	recur
	beq	norecur	; Si estoy en modo recursivo, acepto modificar el operador
	jmp	noM
	
norecur	ldaa	oper	; Si no hay operador, cargo el 
	beq	noM	; "-" como operador
	
	inc	negop2	; Si no se cumplio nada de lo anterior,
	ldaa	#$2D	;avisamos que el operando 2 es negativo
	staa	mdis	;y cargamos el "-" en el display
*inc	digop	; Decrementamos en uno los digitos disponibles
	jmp	lcarga
	
	

nega	ldaa	negop1	; Si ya fue negado el operando 1,
	bne	noM	;uso el '-' como operador aunque op1 sea 0
	inc	negop1	; Avisamos que el operando 1 es negativo
*inc	digop	; Decrementamos en uno los digitos disponibles
	ldaa	#$2D	;y cargamos el "-" en el display
	staa	mdis
	jmp	lcarga



noM	ldaa	0,y
	beq	nocarga	; Se apretó un operando?
	ldaa	recur 
	beq	sal10 ; Si no estoy en modo recursivo, analizo si tengo operador
	clc	recur ; Borro la recursividad
	jmp	coper

sal10   ldaa	oper ;verifico que no haya operador cargado
	bne	lcarga ; Si hay operador, no cargo el carácter presionado
coper	ldx	#mdis
	pshx
	ldaa	0,y
	ldx	#digop
	ldy	#oper
	jsr	cargoop	; Cargo el operador
	jmp	lcarga
	
error	equ	*
	ldaa	#$45
	staa	6,x	; Cargo "E" en la primer memoria del display
	ldab	#3
	inx
erase	clr	0,x	; Borro los tres ultimos digitos del display
	inx
	decb
	bne	erase	
	
	
lcarga	ldx	#mdis
	jsr	display
	jsr	delay
nocarga	jmp	mloop 

****************************************************************************************************************
	rseg	VARS
negop1	rmb	1
op1	rmb	2
oper	rmb	1
negop2	rmb	1
op2	rmb	2
mdis	rmb	4
digop	rmb	1
result	rmb	2
recur	rmb	1	; 1=recursivo  0 = no recursivo
Nclc	equ	*-negop1
****************************************************************************************************************	

****************************************************************************************************************
	rseg	STACK
stack	rmb	$50	;el programa hace uso mínimo del stack, pero se asigno un espacio extra.
st_ini	equ	*-1
****************************************************************************************************************

********************  String  ***************************
	rseg	STRING
I_STR	fcb	 0
	fcb	 1
	fcb	 2
	fcb	 3
	fcb	 4
	fcb	 5
	fcb	 6
	fcb	 7
	fcb	 8
	fcb	 9
	fcc	'+-C/*R'
	
	END