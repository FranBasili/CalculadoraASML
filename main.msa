****************************************************************************************************************
*						Calculadora						Grupo: 7
*	Este programa es mas fachero que Pele
****************************************************************************************************************
	p68h11		;declara el modelo de microprocesador utilizado.
	extern	initdis,outchar,keypad,init,display,cargoop,cargon,calculo,delay
$const.def
	rseg	CODE
	lds 	#st_ini
	jsr	initdis
	ldx	#op1bcd
	ldaa	#Nclc	
	jsr	init
	ldaa	#$30
	ldx	#mdis
	staa	3,x
	jsr 	display	
mlop	ldy	#I_STR
	jsr	keypad
	
	bcc	nocarga
	
	ldaa	0,y
	cmpa	#$43	; Se apretó reset?
	bne	noC
	ldx	#op1bcd
	ldaa	#Nclc	
	jsr	init
	ldaa	#$30
	ldx	#mdis
	staa	3,x
	clc
	jmp	lcarga
	
noC	ldaa	0,y
	cmpa	#$52	; Se apretó "="?
	bne	noR
	ldaa	0,y
	ldab	#2
	jsr	outchar
	jsr	calculo
	clc
	jmp	lcarga

noR	ldaa	0,y
	cmpa	#$30
	blo	noN	; Se apretó un numero?
	ldaa	0,y
	ldab	#3
	jsr	outchar
	ldx	#op1bcd
	jsr	cargon
	clc
	jmp	lcarga

noN 	ldaa	0,y
	beq	nocarga	; Se apretó un numero?
	clc
	ldx	#mdis
	pshx
	ldx	#operbcd
	pshx
	ldaa	0,y
	psha
	jsr	cargoop
	clc
	
lcarga	ldx	#mdis
	jsr 	display	
	jsr	delay
nocarga	bra	mlop 

****************************************************************************************************************
	rseg	VARS
op1bcd	rmb	4
operbcd	rmb	1
op2bcd	rmb	4
op1	rmb	2
op2	rmb	2
mdis	rmb	4
Nclc	equ	*-op1bcd
****************************************************************************************************************	

****************************************************************************************************************
	rseg	STACK
stack	rmb	$50	;el programa hace uso mínimo del stack, pero se asigno un espacio extra.
st_ini	equ	*-1
****************************************************************************************************************

********************  String  ***************************
	rseg	CONST
I_STR	fbc	'0'
	fbc	'1'
	fbc	'2'
	fbc	'3'
	fbc	'4'
	fbc	'5'
	fbc	'6'
	fbc	'7'
	fbc	'8'
	fbc	'9'
	fcc	'+-C*/R'
	
	END
