	p68h11
	public	btasci
****************************************************************************************************************
* 		Binary to ASCII
* Transforma un numero en bcd a binario
* Parametros recibidos:  
*    Inicio del arreglo de numeros por IX  
*    Inicio de mdis por IY
* Parametros entregados: Numero en ASCII en la memoria pedida por IY
****************************************************************************************************************
	rseg	CODE
btasci	equ	*
 	psha
	pshb
	pshx
	pshy		;programación defensiva
	
	ldaa	0,x	
	lsla
	bcc	posit	;en estas tres primeras lineas verifico si el númmero es negativo
	ldab	#$2D	;cargo el sibolo negativo -
	stab	0,y
	ldd	0,x	;cargo el numero a convertir
	coma	
	comb
	addd	#1	;complemento a dos de AccD
	ldx	#3	;cantidad de numeros a convertir (como es negativo es uno menos)
	pshx
	bra 	cargo

posit	ldd	0,x
	ldx	#4	;cantidad de numeros a convertir
	pshx		;uso una variable temporal que estara en el stack
cargo	ldx	#10	
	idiv
	addb	#$30	;corrección de número decimal a ASCII		
	stab	3,y	;lo cargo en mdis para luego ser mostrado en el display
	dey		;recorro los elementos del display
	xgdx		;intercambio para no perder lo que se seguira dividiendo
	pulx	
	dex		;decremento el contador de divisiones (variable temporal)
	pshx
	bne	cargo	;si el contador es cero es porque cargo todos los elementos del display
	pulx		;corrección de SP
	
	puly		;programación defensiva
	pulx
	pula	
	pulb
	rts

	END