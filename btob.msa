	p68h11
	public	btasci,error
	extern	keypad,init,display,delay
****************************************************************************************************************
* 		Binary to ASCII
* Transforma un numero en bcd a binario
* Parametros recibidos:  
*    Inicio del arreglo de numeros por IX  
*    Inicio de mdis por IY
* Parametros entregados: Numero en bcd en la memoria pedida por IY
****************************************************************************************************************
	rseg	CODE
btasci	equ	*
 	psha
	pshb
	pshx
	pshy		;programación defensiva
	
	ldaa	0,x	
	lsla
	bcc	posit	;en estas tres primeras lineas verifico si el númmero es negativo
	ldab	#$2D	;cargo el sibolo negativo -
	stab	0,y
	ldd	0,x	;cargo el numero a convertir
	coma	
	comb
	addd	#1	;complemento a dos de AccD
	ldx	#3	;cantidad de numeros a convertir (como es negativo es uno menos)
	pshx
	bra 	cargo

posit	ldd	0,x
	ldx	#4	;cantidad de numeros a convertir
	pshx		;uso una variable temporal que estara en el stack
cargo	ldx	#10	
	idiv
	addb	#$30	;corrección de número decimal a ASCII		
	stab	3,y	;lo cargo en mdis para luego ser mostrado en el display
	dey		;recorro los elementos del display
	xgdx		;intercambio para no perder lo que se seguira dividiendo
	pulx	
	dex		;decremento el contador de divisiones (variable temporal)
	pshx
	bne	cargo	;si el contador es cero es porque cargo todos los elementos del display
	pulx		;corrección de SP
	
	puly		;programación defensiva
	pulx
	pula	
	pulb
	rts


**********************************************************************************************
*ERROR
* Pone una "E" en el display y "congela" la calculadora hasta que se aprete clear y se borren
*todas las memorias.
*Parametros recibidos:
*	Primer dirección del arreglo numerico por IX
*	Origen del arreglo del teclado por IY
*	Cant memorias a borrar por AccB
*	Memorias que se muestran en el display por stack
*Parametros entregados: Ninguno
**********************************************************************************************
error	equ	*
	psha		; Programación defensiva
	pshb
	pshx
	pshy
	
	tsx		; Creo un framepointer
	ldx	8,x	; Cargo en IX la dir de  mdis
	ldaa	#$45	; Cargo "E" en la primer memoria del display
	staa	0,x	
	ldab	#3
	inx
erase	clr	0,x	; Borro los tres ultimos digitos del display
	inx
	decb
	bne	erase
	
	tsx		; Creo un framepointer
	ldx	8,x	; Cargo en IX la dir de  mdis
	jsr	display	; Refresco el display
	
waitclr	tsx
	ldy	0,x	; Si entre en error, lo mantengo en el bucle
	jsr	keypad	;hasta que se aprete clear y se borren todas 
	ldaa	0,y	;las memorias
	cmpa	#$43
	bne	waitclr
	
	tsx		; Creo un framepointer
	ldaa	4,x	; Cargo en Acca la cant de memorias a borrar
	ldx	2,x	; Cargo la dirección del inicio del arreglo numerico en IX
	jsr	init	; Borro memorias
	
	ldaa	#$30	; Cargo "0" en Acca
	tsx		; Creo un framepointer
	ldx	8,x	; Cargo en IX la dir. de mdis
	staa	3,x	; Guardo el "0" en el ult digito del display
	
	puly		; Programación defensiva
	pulx
	pulb
	pula
	rts		; Retorno a la subrutina sin haber modificado ningún registro no deseado
	
**********************************************************************************************
**********************************************************************************************	




	END