	p68h11
	public	cargon,cargoop
	extern	btasci	
	
$const.def	
****************************************************************************************************************
* CARGON
*	Agrega el nuevo digito al operando actual haciendo las multiplicacion y suma necesarias.  
* Parametros recibidos: 
*   Por IX: Origen de la cadena que contiene el operando.
*   Por IY Ubicación del caracter a cargar. 
*   Por Stack: Dirección del contador de digitos. (mandar primero)
*   Por Stack: Dirección de la memorias a mostrar por display. (mandar despues)
*   
* Parametros entregados: El nuevo numero en la memoria correspondiente
****************************************************************************************************************
	rseg	CODE

cargon	equ *
	psha
	pshb
	pshx
	pshy
	
	clr	negat
	tsx			
	ldx	10,x	; Apunto IX a la memoria que cuenta los digitos
	ldaa	0,x	; Cargo el contador de digitos
	cmpa 	#DIGITOS    
	blo	cargo  ; Si ya tenía 4 digitos no sigo cargando
	jmp	fcargon
	
cargo	tsx
	ldx	2,x	; Apunto IX al byte de negatividad del operando
	ldaa	0,x	; Cargo el byte de negatividad
	bne	nego	; Si el numero es negativo, salto
	
	ldd	1,x     ; Cargo en AccD el valor a sumar
	ldy	#10	; Cargo en IY la base del sistema numerico
	jmp	saltoC1


nego	inc	negat
	ldy	#10
	ldd	1,x	; Cargo en Accd el valor que ya tenía
	coma		; Lo complemento a 2
	comb
	addd	#1
saltoC1	std	mem	; Guardo en una memoria ese valor
	clra		; Limpio AccD
	clrb
multi	addd	mem	; Sumo el valor que ya tenía tantas veces
	dey		;como indique la base numerica en la que 
	bne	multi	; estoy.
	
	tsx	
	ldy	0,x	; Apunto IY a la dir donde esta el nuevo caracter
	xgdx		; Paso la multiplicacion que tenia en Accd a IX
	ldab	0,y	; Cargo el nuevo caracter
	abx		; Sumo el nuevo caracter
	xgdx		; Paso el nuevo numero a Accd
	tst	negat
	beq	apunto
	coma
	comb
	addd	#1

apunto	tsx
	ldx	2,x	; Cargo la dir del indicador de negatividad del operando
	std	1,x	; Guardo el numero en el operando pedido
	
	tsx		
	ldx	10,x	; Apunto IX al contador de digitos
	inc	0,x 	; Incremento el contador de digitos
	
	tsx	
	ldy	8,x	; Cargo en IY la dir de memoria de mdis
	ldx	2,x	; Cargo en IX el numero a mostrar
	inx
	jsr	btasci	; Voy a la subrutina que convierte y muestra el numero

fcargon puly
	pulx
	pulb
	pula
	rts

****************************************************************************************************************

****************************************************************************************************************


****************************************************************************************************************
* CARGOOP
* 	Carga el operador en la memoria correspondiente y en el display.	
* Parametros recibidos: 
*   Por IX: Direccion de la memoria donde guardo el contador de digitos.
*   Por IY: Direccion de la memoria donde guardo el operador. 
*   Por Acca: Operador a cargar
*   Por Stack: Dirección de las memorias del display.
*   
* Parametros entregados: El operando en la memoria correspondiente
****************************************************************************************************************
	rseg	CODE

cargoop	equ *
	psha
	pshb
	pshx
	pshy
	
	staa	0,y	; Guardo el operador donde corresponde
	clr	0,x	; Reseteo el contador de digitos
	
	
	tsx
	ldx	8,x	; Cargo en IX la dirección de las memorias que se muestran en el display
	staa	0,x	; Muestro el operador en el primer digito del display
	ldab	#3
	inx
borrando	clr	0,x	; Borro los tres ultimos digitos del display
	inx
	decb
	bne	borrando
	
	puly
	pulx
	pulb
	pula
	rts
	
****************************************************************************************************************
****************************************************************************************************************
	
	rseg	VARS
mem	rmb	2
negat	rmb	1
	END